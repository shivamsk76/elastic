{"version":3,"sources":["Components/Dahboard/Piechart.js","Components/Cards/PieCard.js","Components/Dahboard/BarGraph.js","Components/Cards/BarCard.js","Components/Dahboard/LineGraph.js","Components/Cards/LineCard.js","Components/Cards/Card.js","Components/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["PieChart","props","state","chartData","labels","datasets","label","data","backgroundColor","this","height","width","options","title","text","display","fontSize","position","legend","Component","PieCard","className","BarGraph","BarCard","href","LineGraph","LineCard","CardUi","SubMenu","Menu","Header","Layout","Content","Sider","Navbar","theme","mode","defaultSelectedKeys","Item","key","defaultOpenKeys","style","borderRight","icon","UserOutlined","LaptopOutlined","NotificationOutlined","padding","margin","minHeight","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1c9854d4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport  { Pie}  from 'react-chartjs-2';\r\nimport './Dashboard.css'\r\n\r\n\r\n\r\nexport class PieChart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             chartData:{\r\n                 labels: ['shivam', 'sameer','vivek','sam'],\r\n                  datasets: [\r\n                      {\r\n                          label:'Population',\r\n                          data:[ \r\n                              215465,\r\n                              546543,\r\n                              922226,\r\n                              125633\r\n    \r\n                          ],\r\n                          backgroundColor:[\r\n                              'rgba(255,99,132,0.6)',\r\n                              'rgba(54,162,235,0.6)',\r\n                              'rgba(255,206,86,0.6)',\r\n                              'rgba(104,206,86,0.6)',\r\n    \r\n                          ]\r\n                      }\r\n                  ]\r\n             }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n           \r\n        <Pie\r\n        \r\n                             \r\n        data={this.state.chartData}\r\n        height=\"40\"\r\n        width=\"70\"\r\n    \r\n             options={{\r\n            title:{\r\n                text:'shivam Cities',\r\n                display:'true',\r\n                fontSize:25,\r\n                position:\"top\"\r\n                 },\r\n            legend:{\r\n               \r\n                position:'top',\r\n                 \r\n                \r\n               \r\n            \r\n            }\r\n        }} \r\n      /> \r\n            </div>\r\n           )\r\n    }\r\n}\r\n\r\nexport default PieChart\r\n\r\n","import React from 'react';\r\nimport PieChart from '../Dahboard/Piechart';\r\n\r\n\r\nconst PieCard = props =>{\r\n    return(\r\n        <div  className='card text-center'>\r\n        <div   className='overflow'>\r\n        \r\n         <PieChart className=\"card-img-top\" />\r\n        </div>\r\n        <div className='card-body text-dark'>\r\n        <h4 className='card-title'> card title</h4>\r\n        <p className=\"card-text text-secondary\">sdfsffffffgddddddddddddddddddddddddddddddddddddddddd</p>\r\n        \r\n      \r\n        </div>\r\n        </div>\r\n    )}\r\n\r\n    export default PieCard;","import React, { Component } from 'react';\r\nimport  {Bar}  from 'react-chartjs-2';\r\nimport './Dashboard.css'\r\n\r\n\r\nclass BarGraph extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             chartData:{\r\n                 labels: ['shivam', 'sameer','vivek','sam'],\r\n                  datasets: [\r\n                      {\r\n                          label:'Population',\r\n                          data:[ \r\n                              215465,\r\n                              546543,\r\n                              922226,\r\n                              123456\r\n    \r\n                          ],\r\n                          backgroundColor:[\r\n                              'rgba(255,99,132,0.6)',\r\n                              'rgba(54,162,235,0.6)',\r\n                              'rgba(255,206,86,0.6)',\r\n                              'rgba(225,206,86,0.6)',\r\n    \r\n                          ]\r\n                      }\r\n                  ]\r\n             }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n           \r\n        <Bar\r\n        \r\n                             \r\n        data={this.state.chartData}\r\n        height=\"40\"\r\n        width=\"70\"\r\n    \r\n             options={{\r\n            title:{\r\n                text:'shivam Cities',\r\n                display:'true',\r\n                fontSize:25,\r\n                position:\"top\"\r\n                 },\r\n            legend:{\r\n               \r\n                position:'top',\r\n                 \r\n                \r\n               \r\n            \r\n            }\r\n        }} \r\n      /> \r\n            </div>\r\n           )\r\n    }\r\n}\r\n\r\nexport default BarGraph\r\n\r\n","import React from 'react';\r\nimport BarGraph from '../Dahboard/BarGraph';\r\n\r\nconst BarCard = props =>{\r\n    return(\r\n        <div  className='card text-center'>\r\n        <div   className='overflow'>\r\n        \r\n         <BarGraph className=\"card-img-top\" />\r\n        </div>\r\n        <div className='card-body text-dark'>\r\n        <h4 className='card-title'> card title</h4>\r\n        <p className=\"card-text text-secondary\">sdfsffffffgddddddddddddddddddddddddddddddddddddddddd</p>\r\n        \r\n        <a href=\"#\" className=\"btn btn-outline-success\"> Attendence</a>\r\n        </div>\r\n        </div>\r\n    )}\r\n\r\n    export default BarCard;","import React, { Component } from 'react';\r\nimport  {Line}  from 'react-chartjs-2';\r\nimport './Dashboard.css'\r\n\r\n\r\n\r\nclass LineGraph extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             chartData:{\r\n                 labels: ['shivam', 'sameer','vivek'],\r\n                  datasets: [\r\n                      {\r\n                          label:'Population',\r\n                          data:[ \r\n                              215465,\r\n                              546543,\r\n                              922226,\r\n    \r\n                          ],\r\n                          backgroundColor:[\r\n                              'rgba(255,99,132,0.6)',\r\n                              'rgba(54,162,235,0.6)',\r\n                              'rgba(255,206,86,0.6)',\r\n    \r\n                          ]\r\n                      }\r\n                  ]\r\n             }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n           \r\n        <Line\r\n        \r\n                             \r\n        data={this.state.chartData}\r\n        height=\"40\"\r\n        width=\"70\"\r\n    \r\n             options={{\r\n            title:{\r\n                text:'shivam Cities',\r\n                display:'true',\r\n                fontSize:25,\r\n                position:\"top\"\r\n                 },\r\n            legend:{\r\n               \r\n                position:'top',\r\n                 \r\n                \r\n               \r\n            \r\n            }\r\n        }} \r\n      /> \r\n            </div>\r\n           )\r\n    }\r\n}\r\n\r\nexport default LineGraph\r\n\r\n","import React from 'react';\r\nimport LineGraph from '../Dahboard/LineGraph';\r\n\r\nconst LineCard = props =>{\r\n    return(\r\n        <div  className='card text-center'>\r\n        <div   className='overflow'>\r\n        \r\n         <LineGraph className=\"card-img-top\" />\r\n        </div>\r\n        <div className='card-body text-dark'>\r\n        <h4 className='card-title'> card title</h4>\r\n        <p className=\"card-text text-secondary\">sdfsffffffgddddddddddddddddddddddddddddddddddddddddd</p>\r\n        \r\n        <a href=\"#\" className=\"btn btn-outline-success\"> Attendence</a>\r\n        </div>\r\n        </div>\r\n    )}\r\n\r\n    export default LineCard;","import React, { Component } from 'react'\r\nimport PieCard from './PieCard';\r\nimport './Card.css';\r\nimport BarCard from './BarCard';\r\nimport LineCard from './LineCard';\r\n\r\n\r\n\r\n\r\n class CardUi extends Component {\r\n    render() {\r\n        return (\r\n            <div className='container-fluid d-flex justify-content-center'>\r\n            <div className='row'>\r\n                <div className='div1'><PieCard/></div>\r\n                <div className='div2'> <BarCard/> </div>\r\n                <div  className='div3'><LineCard/> </div>\r\n            </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardUi\r\n","import React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navbar.css'\r\nimport CardUi from '../Cards/Card';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nclass  Navbar extends Component {\r\n    render() {\r\nreturn (\r\n    <div className=\"App\">\r\n\r\n    <Layout>\r\n    <Header className=\"header\">\r\n      <div className=\"logo\" />\r\n      <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n        <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n        <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n        <Menu.Item key=\"3\">Dashboard</Menu.Item>\r\n      </Menu>\r\n    </Header>\r\n    <Layout>\r\n      <Sider width={200} className=\"site-layout-background\">\r\n        <Menu\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={['1']}\r\n          defaultOpenKeys={['sub1']}\r\n          style={{ height: '100%', borderRight: 0 }}\r\n        >\r\n          <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"subnav 1\">\r\n            <Menu.Item key=\"1\">option1</Menu.Item>\r\n            <Menu.Item key=\"2\">option2</Menu.Item>\r\n            <Menu.Item key=\"3\">option3</Menu.Item>\r\n            <Menu.Item key=\"4\">option4</Menu.Item>\r\n          </SubMenu>\r\n          <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"subnav 2\">\r\n            <Menu.Item key=\"5\">option5</Menu.Item>\r\n            <Menu.Item key=\"6\">option6</Menu.Item>\r\n            <Menu.Item key=\"7\">option7</Menu.Item>\r\n            <Menu.Item key=\"8\">option8</Menu.Item>\r\n          </SubMenu>\r\n          <SubMenu key=\"sub3\" icon={<NotificationOutlined />} title=\"subnav 3\">\r\n            <Menu.Item key=\"9\">option9</Menu.Item>\r\n            <Menu.Item key=\"10\">option10</Menu.Item>\r\n            <Menu.Item key=\"11\">option11</Menu.Item>\r\n            <Menu.Item key=\"12\">option12</Menu.Item>\r\n          </SubMenu>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout style={{ padding: '0 24px 24px' }}>\r\n        <Breadcrumb style={{ margin: '16px 0' }}>\r\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item>List</Breadcrumb.Item>\r\n          <Breadcrumb.Item>App</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Content\r\n          className=\"site-layout-background\"\r\n          \r\n          style={{\r\n            padding: 24,\r\n            margin: 0,\r\n            minHeight: 280,\r\n            \r\n          }}\r\n        >\r\n        <CardUi/>\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  </Layout>,\r\n    </div>\r\n  ); }}\r\n\r\n\r\n  export default Navbar;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n            <Navbar />\r\n            <Route exact path=\"/Dashboard\" />\r\n      </div>  </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}